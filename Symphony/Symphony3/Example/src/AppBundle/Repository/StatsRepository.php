<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Stats;

/**
 * StatsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StatsRepository extends \Doctrine\ORM\EntityRepository 
{
    public function getAll() {
        try {

            $query = $this->getEntityManager()->createQueryBuilder()
                ->select('s')
                ->from('AppBundle:Stats', 's')
                ->getQuery();

            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
    
    public function updateImpression($id) {
        try {

            $em = $this->getEntityManager();
            $impression = $em->getRepository('AppBundle:Stats')->find($id);
            $impression->setImpressions( $impression->getImpressions() + 1);

            $em->flush();
   
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
    public function updateStats($link) {
        try {

            $stats = $this->getEntityManager()->getRepository('AppBundle:Stats')->findOneBy([
                'date' => new \DateTime(),
                'link' => $link
            ]);

            if ($stats) {
                $stats->setClicks($stats->getClicks()+1);
                $stats->setUpdatedTs(new \DateTime());
            } else {
                $stats = new Stats();
                $stats->setLink($link);
                $stats->setClicks(1);
                $stats->setImpressions(0);
                $stats->setDate(new \DateTime());
                $stats->setUpdatedTs(new \DateTime());
            }

            $this->getEntityManager()->persist($stats);
            $this->getEntityManager()->flush();
            
            return $stats;

        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
}
